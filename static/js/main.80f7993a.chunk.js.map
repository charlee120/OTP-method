{"version":3,"sources":["firebase.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","handleChange","e","target","name","value","setState","configureCaptcha","window","recaptchaVerifier","auth","RecaptchaVerifier","size","callback","response","onSignInSubmit","console","log","defaultCountry","preventDefault","phoneNumber","state","mobile","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","error","onSubmitOTP","code","otp","confirm","result","user","JSON","stringify","alert","onSubmit","this","id","type","placeholder","required","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAaAA,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKJR,QAAf,E,OCmFeS,E,4MA9FbC,aAAe,SAACC,GACd,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGF,EAAOC,K,EAIZE,iBAAmB,WACjBC,OAAOC,kBAAoB,IAAIlB,EAASmB,KAAKC,kBAC3C,iBACA,CACEC,KAAM,YACNC,SAAU,SAACC,GAET,EAAKC,iBACLC,QAAQC,IAAI,uBAEdC,eAAgB,Q,EAKtBH,eAAiB,SAACb,GAChBA,EAAEiB,iBACF,EAAKZ,mBAEL,IAAMa,EAAc,MAAQ,EAAKC,MAAMC,OACvCN,QAAQC,IAAIG,GACZ,IAAMG,EAAcf,OAAOC,kBAC3BlB,EACGmB,OACAc,sBAAsBJ,EAAaG,GACnCE,MAAK,SAACC,GAGLlB,OAAOkB,mBAAqBA,EAC5BV,QAAQC,IAAI,wBAGbU,OAAM,SAACC,GACNZ,QAAQC,IAAI,oB,EAMlBY,YAAc,SAAC3B,GACbA,EAAEiB,iBACF,IAAMW,EAAO,EAAKT,MAAMU,IACxBf,QAAQC,IAAIa,GAEZtB,OAAOkB,mBAAmBM,QAAQF,GAAML,MAAK,SAACQ,GAE5C,IAAMC,EAAOD,EAAOC,KACpBlB,QAAQC,IAAIkB,KAAKC,UAAUF,IAC3BG,MAAM,uBAELV,OAAM,SAACC,GACRZ,QAAQC,IAAI,0B,4CAMhB,WACE,OACE,gCACE,4CACA,uBAAMqB,SAAUC,KAAKxB,eAArB,UACE,qBAAKyB,GAAG,mBACR,uBACEC,KAAK,SACLrC,KAAK,SACLsC,YAAY,gBACZC,UAAQ,EACRC,SAAUL,KAAKtC,eAEjB,wBAAQwC,KAAK,SAAb,uBAEF,0CACA,uBAAMH,SAAWC,KAAKV,YAAtB,UACE,uBACEY,KAAK,SACLrC,KAAK,MACLsC,YAAY,aACZC,UAAQ,EACRC,SAAUL,KAAKtC,eAEjB,wBAAQwC,KAAK,SAAb,8B,GAzFQI,IAAMC,WCIxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.80f7993a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAX7CK73C1xTnlGhRvCA3QomQttOEQTHGY\",\r\n    authDomain: \"fineloptverifier.firebaseapp.com\",\r\n    projectId: \"fineloptverifier\",\r\n    storageBucket: \"fineloptverifier.appspot.com\",\r\n    messagingSenderId: \"523890644901\",\r\n    appId: \"1:523890644901:web:c09e1798889051f522ba4c\",\r\n    measurementId: \"G-VB3BJFLPP2\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React from \"react\";\nimport firebase from \"./firebase\";\n\nclass App extends React.Component {\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  configureCaptcha = () => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\n      \"sign-in-button\",\n      {\n        size: \"invisible\",\n        callback: (response) => {\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\n          this.onSignInSubmit();\n          console.log(\"Recaptcha verified\");\n        },\n        defaultCountry: \"IN\",\n      }\n    );\n  };\n\n  onSignInSubmit = (e) => {\n    e.preventDefault();\n    this.configureCaptcha();\n\n    const phoneNumber = \"+91\" + this.state.mobile;\n    console.log(phoneNumber);\n    const appVerifier = window.recaptchaVerifier;\n    firebase\n      .auth()\n      .signInWithPhoneNumber(phoneNumber, appVerifier)\n      .then((confirmationResult) => {\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        window.confirmationResult = confirmationResult;\n        console.log(\"OTP has been sent\");\n        // ...\n      })\n      .catch((error) => {\n        console.log(\"SMS not sent\");\n        // Error; SMS not sent\n        // ...\n      });\n  };\n\n  onSubmitOTP = (e) => {\n    e.preventDefault();\n    const code = this.state.otp ;\n    console.log(code);\n\n    window.confirmationResult.confirm(code).then((result) => {\n      // User signed in successfully.\n      const user = result.user;\n      console.log(JSON.stringify(user));\n      alert(\"user is verified\");\n      // ...\n    }).catch((error) => {\n      console.log(\"Could not verified\");\n      // User couldn't sign in (bad verification code?)\n      // ...\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Login Form</h2>\n        <form onSubmit={this.onSignInSubmit}>\n          <div id=\"sign-in-button\"></div>\n          <input\n            type=\"number\"\n            name=\"mobile\"\n            placeholder=\"Mobile Number\"\n            required\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <h2>OTP Form</h2>\n        <form onSubmit={ this.onSubmitOTP }>\n          <input\n            type=\"number\"\n            name=\"otp\"\n            placeholder=\"OTP Number\"\n            required\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}